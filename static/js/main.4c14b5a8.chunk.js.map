{"version":3,"sources":["googletag.js","logo.svg","App.js","satro.js","reportWebVitals.js","index.js"],"names":["w","d","s","l","i","push","Date","getTime","event","f","getElementsByTagName","j","createElement","async","onload","console","log","src","parentNode","insertBefore","window","document","App","useState","count","setCount","className","TextField","onKeyUp","e","t","n","r","split","forEach","RegExp","match","replace","join","length","Math","round","slice","substring","satro","target","value","id","label","variant","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2HAMA,SAAWA,EAAGC,EAAGC,EAAGC,EAAGC,GACnBJ,EAAEG,GAAKH,EAAEG,IAAM,GACfH,EAAEG,GAAGE,KAAK,CACN,aAAa,IAAIC,MAAOC,UACxBC,MAAO,WAEX,IAAIC,EAAIR,EAAES,qBAAqBR,GAAG,GAC9BS,EAAIV,EAAEW,cAAcV,GAExBS,EAAEE,OAAQ,EACVF,EAAEG,OAAS,WACPC,QAAQC,IAAI,SAAU,eAE1BL,EAAEM,IACE,yDACJR,EAAES,WAAWC,aAAaR,EAAGF,GAfjC,CAgBGW,OAAQC,SAAU,SAAU,c,iGCtBhB,I,wBC8BAC,MAtBf,WAAgB,IAAD,EACeC,mBAAS,cADxB,mBACJC,EADI,KACGC,EADH,KAUb,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,iCAGM,cAACC,EAAA,EAAD,CAAWD,UAAU,YAAYE,QAXpB,SAACpB,GAGnBiB,ECfA,SAAeI,GAClB,IAAIC,EAAI,GACJC,EAAI,GACJC,EAAI,GACJ5B,EAAI,CAAC,IAAK,IAAK,IAAK,IAAK,KA2C7B,OA1CQyB,EAAEI,MAAM,IACdC,SAAQ,SAAUL,GAChBC,EAAEzB,KAAKwB,GACPzB,EAAE8B,SAAQ,SAAUH,GAChB,IAAIC,EAAI,IAAIG,OAAOJ,EAAG,MACtB,GAAIF,EAAEO,MAAMJ,GAAI,CACZ,IAAI5B,EAAIyB,EAAEQ,QAAQR,EAAG,KACrBC,EAAEzB,KAAKD,UAIX0B,EAAEQ,KAAK,IACLL,MAAM,KACdC,SAAQ,SAAUL,GAChB,IAAIC,GAAKD,EAAEO,MAAM,QAAU,IAAIG,OAC3BP,EAAIQ,KAAKC,MAAMX,EAAI,GACJ,KAAfD,EAAEa,OAAO,KACTb,EAAIA,EAAEc,UAAU,EAAGd,EAAEU,OAAS,IAElC,IAAInC,EAAIyB,EAAEI,MAAM,KAChBH,EAAI,EACJ1B,EAAE8B,SAAQ,SAAUL,KAChBC,GACSE,EACLD,EAAE1B,KAAKwB,EAAI,KAEXE,EAAE1B,KAAKwB,MAGfE,EAAE1B,KAAK,QAEH0B,EAAEO,KAAK,IACLL,MAAM,KACdC,SAAQ,SAAUL,GAChB,IAAIC,EAAID,EAAEI,MAAM,KACZH,EAAE,GACFE,EAAE3B,KAAKyB,EAAE,GAAKA,EAAE,IAEhBE,EAAE3B,KAAKyB,EAAE,OAGTE,EAAEM,KAAK,KD/BHM,CAAMpC,EAAMqC,OAAOC,SAQmCC,GAAG,iBAAiBC,MAAM,kBAAaC,QAAQ,aAC7G,4BACEzB,QEbK0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BZ,M","file":"static/js/main.4c14b5a8.chunk.js","sourcesContent":["// window.dataLayer = [{\n//     'newPage': 'signup',\n//     'visitorType': 'high-value',\n//     'customPagePath': window.document.URL,\n//     'custom': 'oh ok'\n// }];\n(function (w, d, s, l, i) {\n    w[l] = w[l] || [];\n    w[l].push({\n        'gtm.start': new Date().getTime(),\n        event: 'gtm.js'\n    });\n    var f = d.getElementsByTagName(s)[0],\n        j = d.createElement(s),\n        dl = l != 'dataLayer' ? '&l=' + l : '';\n    j.async = true;\n    j.onload = function(){\n        console.log('%c Hi.', 'color:pink');\n    };\n    j.src =\n        'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n    f.parentNode.insertBefore(j, f);\n})(window, document, 'script', 'dataLayer', 'GTM-M38BMKG');\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React ,{useState} from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport {satro} from './satro';\nimport './googletag';\nimport TextField from '@material-ui/core/TextField';\n\nfunction App() {\n    const [count, setCount] = useState('init state');\n\n\n  const handleKeyPress = (event) => {\n    // if (event.key === 'Enter') {\n      // console.log('enter press here! ',event.target.value)\n       setCount(satro(event.target.value))\n    // }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      jdeha jdeha pkajti!\n      </header>\n            <TextField className=\"App-input\" onKeyUp={handleKeyPress} id=\"outlined-basic\" label=\"Tu Å¡ipi...\" variant=\"outlined\" />\n        <p>\n         {count}\n        </p>\n    </div>\n  );\n}\nexport default App;\n","export function satro(e) {\n    var t = [];\n    var n = [];\n    var r = [];\n    var i = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    var s = e.split(\"\");\n    s.forEach(function (e) {\n        t.push(e);\n        i.forEach(function (n) {\n            var r = new RegExp(n, \"gi\");\n            if (e.match(r)) {\n                var i = e.replace(e, \"|\");\n                t.push(i)\n            }\n        })\n    });\n    var o = t.join(\"\");\n    var u = o.split(\" \");\n    u.forEach(function (e) {\n        var t = (e.match(/\\|/g) || []).length;\n        var r = Math.round(t / 2);\n        if (e.slice(-1) == \"|\") {\n            e = e.substring(0, e.length - 1)\n        }\n        var i = e.split(\"|\");\n        t = 0;\n        i.forEach(function (e) {\n            t++;\n            if (t == r) {\n                n.push(e + \"|\")\n            } else {\n                n.push(e)\n            }\n        });\n        n.push(\" \")\n    });\n    var a = n.join(\"\");\n    var f = a.split(\" \");\n    f.forEach(function (e) {\n        var t = e.split(\"|\");\n        if (t[1]) {\n            r.push(t[1] + t[0])\n        } else {\n            r.push(t[0])\n        }\n    });\n    var l = r.join(\" \");\n    return l\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}